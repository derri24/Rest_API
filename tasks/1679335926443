{"id":1679335926443,"content":"oi8765","status":"","date":"","fileName":"code.sql","fileContent":"data:application/octet-stream;base64,/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.0 		*/
/*  Created On : 15-мар-2023 22:17:50 				*/
/*  DBMS       : MySql 						*/
/* ---------------------------------------------------- */

SET FOREIGN_KEY_CHECKS=0
; 
/* Drop Views */

DROP VIEW IF EXISTS `airplanes_datas` CASCADE
;

DROP VIEW IF EXISTS `tickets_info` CASCADE
;

DROP VIEW IF EXISTS `trips_info` CASCADE
;

/* Drop Tables */

DROP TABLE IF EXISTS `airoports` CASCADE
;

DROP TABLE IF EXISTS `airplanes` CASCADE
;

DROP TABLE IF EXISTS `aviacompany` CASCADE
;

DROP TABLE IF EXISTS `boarding_passes` CASCADE
;

DROP TABLE IF EXISTS `booking` CASCADE
;

DROP TABLE IF EXISTS `cities` CASCADE
;

DROP TABLE IF EXISTS `citizenships` CASCADE
;

DROP TABLE IF EXISTS `contact_datas` CASCADE
;

DROP TABLE IF EXISTS `fare_conditions` CASCADE
;

DROP TABLE IF EXISTS `flights` CASCADE
;

DROP TABLE IF EXISTS `issuing_counties` CASCADE
;

DROP TABLE IF EXISTS `models` CASCADE
;

DROP TABLE IF EXISTS `passengers` CASCADE
;

DROP TABLE IF EXISTS `passports` CASCADE
;

DROP TABLE IF EXISTS `seats` CASCADE
;

DROP TABLE IF EXISTS `tickets` CASCADE
;

DROP TABLE IF EXISTS `tickets_flights` CASCADE
;

DROP TABLE IF EXISTS `timetables` CASCADE
;

DROP TABLE IF EXISTS `timezones` CASCADE
;

DROP TABLE IF EXISTS `trips` CASCADE
;

/* Create Tables */

CREATE TABLE `airoports`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	`longitude` DOUBLE(10,2) NOT NULL,
	`latitude` DOUBLE(10,2) NOT NULL,
	`city_id` INT UNSIGNED NOT NULL,
	`aviacompany_id` INT NOT NULL,
	CONSTRAINT `PK_airoports` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Airports relationships contain the airport name, latitude, longitude, and city and aviacompany links.'

;

CREATE TABLE `airplanes`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`model_id` INT UNSIGNED NOT NULL,
	`aviacompany_id` INT UNSIGNED NOT NULL,
	`count_seats_class_A` INT NOT NULL,
	`count_seats_class_B` INT NOT NULL,
	`count_seats_class_C` INT NOT NULL,
	CONSTRAINT `PK_airplanes` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Relations airplanes, contains the model of the aircraft, links to the airport and the airline. Contains the number of seats of classes A, B, C.'

;

CREATE TABLE `aviacompany`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	CONSTRAINT `PK_aviacompany` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Aviacompanies relationships contain the name of the aviacompany.'

;

CREATE TABLE `boarding_passes`
(
	`ticket_id` INT UNSIGNED NOT NULL,
	`passenger_id` INT UNSIGNED NOT NULL,
	`boarding_time` DATETIME NOT NULL,
	`seat_id` INT UNSIGNED NOT NULL,
	`baggage_weight` INT NOT NULL,
	`baggage_volume` INT NOT NULL,
	`number` INT NULL,
	`airplane_id` INT NULL,
	CONSTRAINT `PK_boarding_passes` PRIMARY KEY (`ticket_id` ASC, `passenger_id` ASC)
)
COMMENT = 'Relation boarding passes, contains links to the ticket, passenger, seat, plane. It also contains the date of the boarding pass, the number of the pass, the weight and volume of the baggage.'

;

CREATE TABLE `booking`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	`date` DATETIME NOT NULL,
	`status` ENUM NOT NULL,
	`passenger_id` INT UNSIGNED NOT NULL,
	CONSTRAINT `PK_booking` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Booking relationship, contains the name of the booking, the date of the booking, the status of the booking, and a link to the passenger who booked the ticket'

;

CREATE TABLE `cities`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	`time_zones_id` INT NOT NULL,
	CONSTRAINT `PK_cities` PRIMARY KEY (`id` ASC)
)
COMMENT = 'City relations, contains city names and time zone reference.'

;

CREATE TABLE `citizenships`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(25) NULL,
	CONSTRAINT `PK_citizenships` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Сitizenship relation, contains the name of the citizenship'

;

CREATE TABLE `contact_datas`
(
	`passenger_id` INT UNSIGNED NOT NULL,
	`phone_number` VARCHAR(15) NOT NULL,
	`email` VARCHAR(50) NULL,
	CONSTRAINT `PK_contact_datas` PRIMARY KEY (`passenger_id` ASC)
)
COMMENT = 'Attitude contact details, contains a link to the passenger, phone number and e-mail.'

;

CREATE TABLE `fare_conditions`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`type` VARCHAR(30) NOT NULL,
	`surcharge_coefficient` DOUBLE(10,2) NOT NULL,
	CONSTRAINT `PK_fare_conditions` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Flight conditions relations, contains the type of flight and the coefficient of additional payment.'

;

CREATE TABLE `flights`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`actual_departure_date` DATETIME NOT NULL,
	`actual_arrival_date` DATETIME NOT NULL,
	`status` ENUM NOT NULL,
	`trip_id` INT UNSIGNED NOT NULL,
	`departure_airoport_id` INT UNSIGNED NOT NULL,
	`arrival_airoport_id` INT UNSIGNED NOT NULL,
	`airplane_id` INT UNSIGNED NOT NULL,
	CONSTRAINT `PK_flights` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Flight relationships, contain the date of departure, date of arrival, status, links to the trip, airports of departure and arrival, to the airplane.'

;

CREATE TABLE `issuing_counties`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(25) NOT NULL,
	CONSTRAINT `PK_issuing_counties` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Issuing country relation, contains the name of the issuing country'

;

CREATE TABLE `models`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	`flight_range` INT NOT NULL,
	CONSTRAINT `PK_models` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Relationships of airplanes models, contains the name of the model and the flight range.'

;

CREATE TABLE `passengers`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	`lastname` VARCHAR(50) NOT NULL,
	`date_of_birth` DATE NOT NULL,
	`citisizenship_id` INT UNSIGNED NOT NULL,
	CONSTRAINT `PK_passengers` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Relation passengers, contains the passenger''s first name, last name, date of birth and reference to citizenship'

;

CREATE TABLE `passports`
(
	`passenger_id` INT UNSIGNED NOT NULL,
	`passport_number` VARCHAR(15) NOT NULL,
	`validity_date` DATE NOT NULL,
	`issuing_country_id` INT UNSIGNED NULL,
	CONSTRAINT `PK_passports` PRIMARY KEY (`passenger_id` ASC)
)
COMMENT = 'Relationship passports, contains the passport number, validity date, and a link to the country of issue of the passport'

;

CREATE TABLE `seats`
(
	`class` VARCHAR(1) NOT NULL,
	`airplane_id` INT UNSIGNED NOT NULL,
	`number` INT NOT NULL,
	`id` INT NOT NULL,
	CONSTRAINT `PK_seats` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Seat relationships contain a reference to the aircraft, seat number, and seat class.'

;

CREATE TABLE `tickets`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`price` DOUBLE(10,2) NOT NULL,
	`booking_id` INT UNSIGNED NOT NULL,
	`passenger_id` INT UNSIGNED NOT NULL,
	`number` VARCHAR(50) NOT NULL,
	CONSTRAINT `PK_tickets` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Ticket relation, contains the price, a link to the booking and a link to the passenger who owns the ticket'

;

CREATE TABLE `tickets_flights`
(
	`flight_id` INT UNSIGNED NOT NULL,
	`ticket_id` INT UNSIGNED NOT NULL,
	`fare_condition_id` INT UNSIGNED NOT NULL,
	CONSTRAINT `PK_tickets_flights` PRIMARY KEY (`flight_id` ASC, `ticket_id` ASC)
)
COMMENT = 'Relationship linking tickets and flights to implement a many-to-many relationship.'

;

CREATE TABLE `timetables`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`departure_date` DATETIME NOT NULL,
	`arrival_date` DATETIME NOT NULL,
	`trip_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	CONSTRAINT `PK_timetable` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Timetables relationships contain a departure date and an arrival date. Contains a link to the trip.'

;

CREATE TABLE `timezones`
(
	`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(25) NOT NULL,
	CONSTRAINT `PK_timezones` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Time zone relationships, contains the name of the time zone.'

;

CREATE TABLE `trips`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`number` NCHAR(50) NOT NULL,
	`aviacompany_id` INT UNSIGNED NOT NULL,
	`departure_city_id` INT NOT NULL,
	`arrival_city_id` INT NOT NULL,
	`airplane_id` INT UNSIGNED NOT NULL,
	CONSTRAINT `PK_trips` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Trips relationships, contain flight number, links to airline, departure city, destination city, and airplane.'

;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE `airoports` 
 ADD INDEX `IXFK_airoports_aviacompany` (`aviacompany_id` ASC)
;

ALTER TABLE `airoports` 
 ADD INDEX `IXFK_airoports_cities` (`city_id` ASC)
;

ALTER TABLE `airoports` 
 ADD INDEX `IDX_city_id_name_aviacompany_id` (`city_id` ASC, `name` ASC, `aviacompany_id` ASC)
;

ALTER TABLE `airplanes` 
 ADD INDEX `IXFK_airplanes_aviacompany` (`aviacompany_id` ASC)
;

ALTER TABLE `airplanes` 
 ADD INDEX `IXFK_airplanes_models` (`model_id` ASC)
;

ALTER TABLE `airplanes` 
 ADD INDEX `IDX_model_id_aviacompany_id` (`model_id` ASC, `aviacompany_id` ASC)
;

ALTER TABLE `aviacompany` 
 ADD INDEX `IDX_name` (`name` ASC)
;

ALTER TABLE `boarding_passes` 
 ADD CONSTRAINT `UNQ_seats_number_airplane` UNIQUE (`seat_id` ASC, `number` ASC, `airplane_id` ASC)
;

ALTER TABLE `boarding_passes` 
 ADD INDEX `IXFK_boarding_passes_passengers` (`passenger_id` ASC)
;

ALTER TABLE `boarding_passes` 
 ADD INDEX `IXFK_boarding_passes_seats` (`seat_id` ASC, `airplane_id` ASC)
;

ALTER TABLE `boarding_passes` 
 ADD INDEX `IXFK_boarding_passes_seats_02` (`seat_id` ASC)
;

ALTER TABLE `boarding_passes` 
 ADD INDEX `IXFK_boarding_passes_tickets` (`ticket_id` ASC)
;

ALTER TABLE `boarding_passes` 
 ADD INDEX `IDX_baggage_weight_baggage_volume` (`baggage_weight` ASC, `baggage_volume` ASC)
;

ALTER TABLE `booking` 
 ADD INDEX `IXFK_booking_passengers` (`passenger_id` ASC)
;

ALTER TABLE `booking` 
 ADD INDEX `IDX_name_status` (`name` ASC, `status` ASC)
;

ALTER TABLE `booking` 
 ADD INDEX `IDX_name_date` (`name` ASC, `date` ASC)
;

ALTER TABLE `booking` 
 ADD INDEX `IDX_passenger_id_name_date` (`passenger_id` ASC, `name` ASC, `date` ASC)
;

ALTER TABLE `cities` 
 ADD INDEX `IXFK_cities_timezones` (`time_zones_id` ASC)
;

ALTER TABLE `cities` 
 ADD INDEX `IDX_name_timezones` (`name` ASC, `time_zones_id` ASC)
;

ALTER TABLE `citizenships` 
 ADD INDEX `IDX_name` (`name` ASC)
;

ALTER TABLE `contact_datas` 
 ADD INDEX `IXFK_contact_datas_passengers` (`passenger_id` ASC)
;

ALTER TABLE `contact_datas` 
 ADD INDEX `IDX_passenger_id_phone_number_emal` (`passenger_id` ASC, `phone_number` ASC, `email` ASC)
;

ALTER TABLE `fare_conditions` 
 ADD INDEX `IDX_type_surcharge_coefficient` (`type` ASC, `surcharge_coefficient` ASC)
;

ALTER TABLE `flights` 
 ADD INDEX `IXFK_flights_airoports` (`departure_airoport_id` ASC)
;

ALTER TABLE `flights` 
 ADD INDEX `IXFK_flights_airplanes` (`airplane_id` ASC)
;

ALTER TABLE `flights` 
 ADD INDEX `IXFK_flights_trips` (`trip_id` ASC)
;

ALTER TABLE `flights` 
 ADD INDEX `IXFK_flights_trips_02` (`trip_id` ASC)
;

ALTER TABLE `flights` 
 ADD INDEX `IDX_actual_departure_date_actual_arrival_date` (`actual_departure_date` ASC, `actual_arrival_date` ASC)
;

ALTER TABLE `flights` 
 ADD INDEX `IDX_departure_airport_id_arrival_airport_id` (`departure_airoport_id` ASC, `arrival_airoport_id` ASC)
;

ALTER TABLE `flights` 
 ADD INDEX `IDX_trip_id_status_airplane_id` (`trip_id` ASC, `status` ASC, `airplane_id` ASC)
;

ALTER TABLE `issuing_counties` 
 ADD INDEX `IDX_name` (`name` ASC)
;

ALTER TABLE `models` 
 ADD INDEX `IDX_name_flight_range` (`name` ASC, `flight_range` ASC)
;

ALTER TABLE `passengers` 
 ADD INDEX `IXFK_passengers_citizenships` (`citisizenship_id` ASC)
;

ALTER TABLE `passengers` 
 ADD INDEX `IDX_name_lastname_date_of_birth` (`name` ASC, `lastname` ASC, `date_of_birth` ASC)
;

ALTER TABLE `passports` 
 ADD INDEX `IXFK_passports_issuing_counties` (`issuing_country_id` ASC)
;

ALTER TABLE `passports` 
 ADD INDEX `IXFK_passports_passengers` (`passenger_id` ASC)
;

ALTER TABLE `passports` 
 ADD INDEX `IDX_passport_number_validity_date` (`passport_number` ASC, `validity_date` ASC)
;

ALTER TABLE `seats` 
 ADD INDEX `IXFK_seats_airplanes` (`airplane_id` ASC)
;

ALTER TABLE `seats` 
 ADD INDEX `IXFK_seats_airplanes_02` (`id` ASC)
;

ALTER TABLE `seats` 
 ADD INDEX `IDX_number_class` (`number` ASC, `class` ASC)
;

ALTER TABLE `tickets` 
 ADD INDEX `IXFK_tickets_booking` (`booking_id` ASC)
;

ALTER TABLE `tickets` 
 ADD INDEX `IXFK_tickets_passengers` (`passenger_id` ASC)
;

ALTER TABLE `tickets` 
 ADD INDEX `IDX_passenger_id_booking_id` (`passenger_id` ASC, `booking_id` ASC)
;

ALTER TABLE `tickets_flights` 
 ADD INDEX `IXFK_tickets_flights_fare_conditions` (`fare_condition_id` ASC)
;

ALTER TABLE `tickets_flights` 
 ADD INDEX `IXFK_tickets_flights_flights` (`flight_id` ASC)
;

ALTER TABLE `tickets_flights` 
 ADD INDEX `IXFK_tickets_flights_tickets` (`ticket_id` ASC)
;

ALTER TABLE `timetables` 
 ADD INDEX `IXFK_timetable_trips` (`trip_id` ASC)
;

ALTER TABLE `timetables` 
 ADD INDEX `IDX_trip_id_departure_date_arrival_date` (`trip_id` ASC, `departure_date` ASC, `arrival_date` ASC)
;

ALTER TABLE `timezones` 
 ADD INDEX `IDX_name` (`name` ASC)
;

ALTER TABLE `trips` 
 ADD INDEX `IXFK_trips_airplanes` (`airplane_id` ASC)
;

ALTER TABLE `trips` 
 ADD INDEX `IXFK_trips_aviacompany` (`aviacompany_id` ASC)
;

ALTER TABLE `trips` 
 ADD INDEX `IXFK_trips_cities` (`departure_city_id` ASC)
;

ALTER TABLE `trips` 
 ADD INDEX `IXFK_trips_cities_02` (`arrival_city_id` ASC)
;

ALTER TABLE `trips` 
 ADD INDEX `IDX_number_departure_city_id_arrival_city_id` (`number` ASC, `departure_city_id` ASC, `arrival_city_id` ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE `airoports` 
 ADD CONSTRAINT `FK_airoports_aviacompany`
	FOREIGN KEY (`aviacompany_id`) REFERENCES `aviacompany` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `airoports` 
 ADD CONSTRAINT `FK_airoports_cities`
	FOREIGN KEY (`city_id`) REFERENCES `cities` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `airplanes` 
 ADD CONSTRAINT `FK_airplanes_aviacompany`
	FOREIGN KEY (`aviacompany_id`) REFERENCES `aviacompany` (`id`) ON DELETE Set Null ON UPDATE Cascade
;

ALTER TABLE `airplanes` 
 ADD CONSTRAINT `FK_airplanes_models`
	FOREIGN KEY (`model_id`) REFERENCES `models` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `boarding_passes` 
 ADD CONSTRAINT `FK_boarding_passes_passengers`
	FOREIGN KEY (`passenger_id`) REFERENCES `passengers` (`id`) ON DELETE Set Null ON UPDATE Cascade
;

ALTER TABLE `boarding_passes` 
 ADD CONSTRAINT `FK_boarding_passes_tickets`
	FOREIGN KEY (`ticket_id`) REFERENCES `tickets` (`id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `flights` 
 ADD CONSTRAINT `FK_flights_airoports`
	FOREIGN KEY (`departure_airoport_id`) REFERENCES `airoports` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `flights` 
 ADD CONSTRAINT `FK_flights_airoports_02`
	FOREIGN KEY (`arrival_airoport_id`) REFERENCES `airoports` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `flights` 
 ADD CONSTRAINT `FK_flights_airplanes`
	FOREIGN KEY (`airplane_id`) REFERENCES `airplanes` (`id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `flights` 
 ADD CONSTRAINT `FK_flights_trips`
	FOREIGN KEY (`trip_id`) REFERENCES `trips` (`id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `flights` 
 ADD CONSTRAINT `FK_flights_trips_02`
	FOREIGN KEY (`trip_id`) REFERENCES `trips` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `passengers` 
 ADD CONSTRAINT `FK_passengers_citizenships`
	FOREIGN KEY (`citisizenship_id`) REFERENCES `citizenships` (`id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `passports` 
 ADD CONSTRAINT `FK_passports_issuing_counties`
	FOREIGN KEY (`issuing_country_id`) REFERENCES `issuing_counties` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `passports` 
 ADD CONSTRAINT `FK_passports_passengers`
	FOREIGN KEY (`passenger_id`) REFERENCES `passengers` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `tickets` 
 ADD CONSTRAINT `FK_tickets_booking`
	FOREIGN KEY (`booking_id`) REFERENCES `booking` (`id`) ON DELETE Set Null ON UPDATE Cascade
;

ALTER TABLE `tickets` 
 ADD CONSTRAINT `FK_tickets_passengers`
	FOREIGN KEY (`passenger_id`) REFERENCES `passengers` (`id`) ON DELETE Set Null ON UPDATE Cascade
;

ALTER TABLE `tickets_flights` 
 ADD CONSTRAINT `FK_tickets_flights_fare_conditions`
	FOREIGN KEY (`fare_condition_id`) REFERENCES `fare_conditions` (`id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `tickets_flights` 
 ADD CONSTRAINT `FK_tickets_flights_flights`
	FOREIGN KEY (`flight_id`) REFERENCES `flights` (`id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `tickets_flights` 
 ADD CONSTRAINT `FK_tickets_flights_tickets`
	FOREIGN KEY (`ticket_id`) REFERENCES `tickets` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `timetables` 
 ADD CONSTRAINT `FK_timetable_trips`
	FOREIGN KEY (`trip_id`) REFERENCES `trips` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `trips` 
 ADD CONSTRAINT `FK_trips_airplanes`
	FOREIGN KEY (`airplane_id`) REFERENCES `airplanes` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `trips` 
 ADD CONSTRAINT `FK_trips_aviacompany`
	FOREIGN KEY (`aviacompany_id`) REFERENCES `aviacompany` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `trips` 
 ADD CONSTRAINT `FK_trips_cities`
	FOREIGN KEY (`departure_city_id`) REFERENCES `cities` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `trips` 
 ADD CONSTRAINT `FK_trips_cities_02`
	FOREIGN KEY (`arrival_city_id`) REFERENCES `cities` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

SET FOREIGN_KEY_CHECKS=1
; 
/* Create Views */

CREATE VIEW airplanes_datas
AS SELECT 
	models.name as "model",
	aviacompany.name as "aviacompany_name",
	airplanes.count_seats_class_A + airplanes.count_seats_class_B + airplanes.count_seats_class_C as "count_seats"
FROM airplanes 
INNER JOIN models ON airplanes.model_id = models.id
INNER JOIN aviacompany ON airplanes.aviacompany_id = aviacompany.id
;


CREATE VIEW tickets_info 
AS SELECT 
	tickets.number as "number",
	passengers.name as "passenger_name",
	passengers.lastname as "passenger_lastname",
	seats.number as "seat_number",
	seats.class as "seat_class",
	trips.departure_date as "departure_date",
	boarding_passes.number as "boarding_passes_number",
	booking.name as "booking_name"
FROM tickets

INNER JOIN passengers ON tickets.passenger_id = passengers.id
INNER JOIN tickets_flights ON tickets.id = tickets_flights.ticket_id
INNER JOIN flights ON tickets_flights.flight_id = flights.id
INNER JOIN trips ON flights.trip_id = trips.id
INNER JOIN booking ON booking.id = tickets.booking_id
INNER JOIN boarding_passes ON tickets.id = boarding_passes.ticket_id
INNER JOIN seats ON seats.number = boarding_passes.seat_id
;


CREATE VIEW trips_info
AS SELECT 
	trips.number as "trips_number",
	timetables.departure_date as "departure_date",
	timetables.arrival_date as "arrival_date"
FROM trips
INNER JOIN timetables on trips.id = timetables.trip_id
;

"}